generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OS {
  iOS
  linux
  windows
  macOS
  android
}

enum Country {
  UK
  USA
  Germany
}

enum SessionStatus {
  ACTIVE
  CLOSED
}

enum ConfigStatus {
  IN_USE
  NOT_IN_USE
}

enum DeviceStatus {
  ACTIVE  // User logged in and can use the device
  REVOKED // User logged out and can't use the device
  BANNED 
  PERMANENTLY_BANNED
}

enum UserStatus {
  ACTIVE
  BANNED
  PERMANENTLY_BANNED
}

model Server {
  id           String   @id @default(uuid())
  publicKey    String   @unique
  backendUri   String   @unique
  wireguardUri String   @unique
  country      Country
  configs      Config[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Config {
  id         String       @id @default(uuid())
  privateKey String       @unique
  userIp     String
  server     Server       @relation(fields: [serverId], references: [id])
  serverId   String
  sessions   Session[]
  status     ConfigStatus @default(NOT_IN_USE)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model User {
  id         String     @id @default(uuid())
  email      String     @unique
  password   String
  status     UserStatus @default(ACTIVE)
  bannedAt   DateTime?
  bannedTill DateTime?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  devices    Device[]
}

model Device {
  id         String       @id @default(uuid())
  name       String       @default("Device")
  os         OS           @default(android)
  user       User         @relation(fields: [userId], references: [id])
  userId     String
  status     DeviceStatus @default(ACTIVE)
  bannedAt   DateTime?
  bannedTill DateTime?
  revokedAt  DateTime?
  sessions   Session[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Session {
  id       String        @id @default(uuid())
  status   SessionStatus @default(ACTIVE)
  openedAt DateTime      @default(now())
  closedAt DateTime?
  device   Device        @relation(fields: [deviceId], references: [id])
  deviceId String
  config   Config        @relation(fields: [configId], references: [id])
  configId String
}
